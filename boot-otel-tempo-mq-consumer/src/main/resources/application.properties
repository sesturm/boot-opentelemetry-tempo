server.port=8091

spring.application.name=boot-otel-tempo-mq-consumer

# Rabbit
spring.rabbitmq.listener.simple.prefetch=1
spring.rabbitmq.host=rabbitmq
spring.rabbitmq.port=5672
spring.rabbitmq.username=${RMQ_USER}
spring.rabbitmq.password=${RMQ_PASS}

rabbitmq.flight.dg.exchange=otel_flight_direct
rabbitmq.flight.received.queue=flight.received.queue
rabbitmq.flight.received.routingkey=flight.event.received

# Redis
spring.redis.cluster.nodes=${REDIS_CLUSTER_NODES}
spring.redis.cluster.max-redirects=${REDIS_CLUSTER_MAX_REDIRECTS}
spring.redis.host=${REDIS_HOST}
spring.redis.port=${REDIS_PORT}


# JMX
management.endpoints.web.exposure.include=*
management.endpoints.web.exposure.include=prometheus,health,info,metric

management.health.probes.enabled=true
management.endpoint.health.show-details=always

# Logging 
#https://docs.spring.io/spring-boot/docs/2.4.2/reference/html/spring-boot-features.html#boot-features-logging 

logging.level.io.opentelemetry=DEBUG
logging.level.web=INFO
logging.level.root=INFO

logging.pattern.console =%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr([${spring.application.name},%X{trace_id},%X{span_id}]) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m %n%wEx
logging.pattern.file=%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr([${spring.application.name},%X{trace_id},%X{span_id}]) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m %n%wEx
logging.file.name=/app/logs/${spring.application.name}.log
logging.file.max-size=10MB
logging.file.max-history=1
logging.file.clean-history-on-start=true